{
    "modelStart": " {\n",
    "basicTypesWithSpecialFetchingNeedsReplacements": [
                                                       "intValue",
                                                       "boolValue",
                                                       "charValue",
                                                       "floatValue",
                                                       "doubleValue",
                                                       "stringValue",
                                                       "stringValue"
                                                       ],
    "importForEachCustomType": "",
    "reservedKeywords": [
                         "abstract",
                         "assert",
                         "boolean",
                         "break",
                         "byte",
                         "case",
                         "catch",
                         "char",
                         "class",
                         "const",
                         "continue",
                         "default",
                         "do",
                         "double",
                         "else",
                         "enum",
                         "extends",
                         "false",
                         "final",
                         "finally",
                         "float",
                         "for",
                         "goto",
                         "if",
                         "implements",
                         "import",
                         "instanceof",
                         "int",
                         "interface",
                         "long",
                         "native",
                         "new",
                         "null",
                         "package",
                         "private",
                         "protected",
                         "public",
                         "return",
                         "short",
                         "static",
                         "strictfp",
                         "super",
                         "switch",
                         "synchronized",
                         "this",
                         "throw",
                         "throws",
                         "transient",
                         "true",
                         "try",
                         "void",
                         "volatile",
                         "while",
                         "description"
                         ],
    "booleanGetter": "",
    "briefDescription": "Defines how your JSON objects can be mapped to Swift structures using the SwiftyJSON library",
    "utilityMethods": [
                       {
                       "forEachProperty": "\t\tif <!VarName!> != nil {\n\t\t\tdictionary[\"<!JsonKeyName!>\"] = <!VarName!>\n\t\t}\n",
                       "bodyEnd": "\t}\n",
                       "signature": "\tfunc toDictionary() -> [String: Any]",
                       "forEachCustomTypeProperty": "\t\tif <!VarName!> != nil{\n\t\t\tdictionary[\"<!JsonKeyName!>\"] = <!VarName!>.toDictionary()\n\t\t}\n",
                       "forEachArrayOfCustomTypeProperty": "\t\tif <!VarName!> != nil {\n\t\t\tvar dictionaryElements = [[String: Any]]()\n\t\t\tfor <!VarName!>Element in <!VarName!> {\n\t\t\t\tdictionaryElements.append(<!VarName!>Element.toDictionary())\n\t\t\t}\n\t\t\tdictionary[\"<!JsonKeyName!>\"] = dictionaryElements\n\t\t}\n",
                       "returnStatement": "\t\treturn dictionary\n",
                       "body": "\t\tvar dictionary = [String:\tAny]()\n",
                       "comment": "\t/**\n\t * Returns all the available property values in the form of [String:\tAny] object where the key is the approperiate json key and the value is the value of the corresponding property\n\t */\n",
                       "bodyStart": " {\n"
                       }
                       ],
    "dataTypes": {
        "stringType": "String",
        "boolType": "Bool",
        "floatType": "Float",
        "doubleType": "Double",
        "characterType": "Character",
        "longType": "Double",
        "intType": "Int"
    },
    "wordsToRemoveToGetArrayElementsType": [
                                            "[",
                                            "]"
                                            ],
    "defaultParentWithUtilityMethods": "SNSwiftyJSONAble",
    "constructors": [
                     {
                     "fetchArrayOfBasicTypePropertyFromMap": "\t\t<!VarName!> = jsonData[\"<!JsonKeyName!>\"].arrayValue.compactMap {\n\t\t\t$0.<!VarBasicTypeReplacement!>\n\t\t}\n",
                     "fetchBasicTypeWithSpecialNeedsPropertyFromMap": "\t\t<!VarName!> = jsonData[\"<!JsonKeyName!>\"].<!VarBasicTypeReplacement!>\n",
                     "bodyStart": "{\n\t\tif jsonData.isEmpty {\n\t\t\treturn\n\t\t}\n",
                     "bodyEnd": "\t}\n",
                     "fetchBasicTypePropertyFromMap": "",
                     "signature": "\tinit?(jsonData: JSON) ",
                     "fetchArrayOfCustomTypePropertyFromMap": "\t\t<!VarName!> = jsonData[\"<!JsonKeyName!>\"].arrayValue.compactMap {\n\t\t\t<!ElementType!>(jsonData: $0)\n\t\t}\n",
                     "comment": "\t/**\n\t * Instantiate the instance using the passed json values to set the properties values\n\t */\n",
                     "fetchCustomTypePropertyFromMap": "\t\tlet <!VarName!>Json = jsonData[\"<!JsonKeyName!>\"]\n\t\tif !<!VarName!>Json.isEmpty{\n\t\t\t<!VarName!> = <!VarType!>(jsonData: <!VarName!>Json)\n\t\t}\n"
                     }
                     ],
    "modelDefinition": "\nstruct <!ModelName!>: SNSwiftyJSONAble",
    "genericType": "AnyObject",
    "getter": "",
    "setter": "",
    "displayLangName": "SwiftyJSON - SNSwiftPackage",
    "fileExtension": "swift",
    "basicTypesWithSpecialFetchingNeeds": [
                                           "Int",
                                           "Bool",
                                           "Character",
                                           "Float",
                                           "Double",
                                           "String",
                                           "AnyObject"
                                           ],
    "basicTypesWithSpecialFetchingNeedsTypeCast" : [
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "arrayType": "[<!ElementType!>]",
    "modelDefinitionWithParent": "\n\nstruct <!ModelName!>: <!ParentClass!>",
    "instanceVarDefinition": "\tvar <!VarName!>: <!VarType!>!\n",
    "supportsFirstLineStatement": "false",
    "modelEnd": "\n}",
    "staticImports": "import Foundation \nimport SwiftyJSON \nimport SNSwiftPackage",
    "langName": "Swift",
    "author" : {
        "name" : "spectatorNan",
        "website" : "https://github.com/spectatorNan"
    }
}
